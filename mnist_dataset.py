# -*- coding: utf-8 -*-
"""MNIST_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QFIrsTjlDeZbsnqmB6_neX2RAvIQrGpR

####**we train the model on the mnist dataset to predict new given number value**
"""

#importing the relevent packages.
import numpy as np
import pandas as pd
import tensorflow as tf
import tensorflow_datasets as tfds

#load the dataset
mnist_data,mnist_info=tfds.load(name='mnist',with_info=True,as_supervised=True)

mnist_train,mnist_test=mnist_data['train'],mnist_data['test']

mnist_val=0.1*mnist_info.splits['train'].num_examples
mnist_val=tf.cast(mnist_val,tf.int64)

test_sample=mnist_info.splits['test'].num_examples
test_sample=tf.cast(test_sample,tf.int64)

def scale(image,label):
  image=tf.cast(image,tf.float32)
  image/=255.
  return image,label

scale_train_val=mnist_train.map(scale)
scale_test=mnist_test.map(scale)

buffer=1000
shuffer_train_and_val=scale_train_val.shuffle(buffer)
val_data=shuffer_train_and_val.take(mnist_val)
train_data=shuffer_train_and_val.skip(mnist_val)

BATCH_SIZE=100
train_data=train_data.batch(BATCH_SIZE)
val_data=val_data.batch(mnist_val)
val_inputs,val_targets=next(iter(val_data))

"""**model building**

there are 784 input layer and 10 output nodes

"""

inputs_size=784
outputs_size=10
hidden_layer_size=50

model=tf.keras.Sequential([
        tf.keras.layers.Flatten(input_shape=(28,28,1)),
        tf.keras.layers.Dense(hidden_layer_size,activation='relu'),
        tf.keras.layers.Dense(hidden_layer_size,activation='relu'),
        tf.keras.layers.Dense(outputs_size,activation='softmax')
    ])

#run the model and fit the optimizer
model.compile(optimizer='Adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

epoch=20
model.fit(train_data,epochs=epoch,validation_data=(val_inputs,val_targets),verbose=2)

#test our model
test_loss,test_accuracy=model.evaluate(scale_test)

print("Test loss : {0:2f}. Test Accuracy : {1:2f}% ".format(test_loss,test_accuracy*100.))

